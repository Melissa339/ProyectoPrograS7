@model List<SistemaElecciones.Models.Partido>
@{
    ViewData["Title"] = "Partido";
}

@section Links{
    <link rel="stylesheet" href="~/css/pages/Partido.css" asp-append-version="true" />
}

<partial name="~/Views/Shared/_modalEdit.cshtml" />

<div class="card shadow-lg mt-5">
    <div class="card-header bg-ligth">
        <h3 class="h3">Partidos</h3>
    </div>
    <div class="card-body">
        <p>
            <button type="button" class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#createModal">
                <i class="fa-solid fa-plus fa-bounce"></i>  Agregar Partido
            </button>
        </p>
        <div class="table-responsive table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl table-responsive-xxl mt-5">
            <table id="tablePartido" class="table table-striped ">
                <thead class="table-dark">
                    <tr>
                        <th></th>
                        <th>Nombre</th>
                        <th>Num Candidatos</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td><button class="option btn btn-outline-info" onclick="ShowConsultaModal('@item.IdPartido')">Generar consulta</button></td>
                            <td>@item.Nombre</td>
                            <td>5</td>
                            <td>
                                <div class="options d-flex ">
                                    @{
                                        //var consultas = new List<Consulta>(Model.Consultas.Where(x => x.IdPaciente == item.IdPaciente).ToList());
                                        //// Almacenar el PacienteInformacion de cada objeto de consultas en una lista
                                        //var pacientesInformacion = consultas.Select(c => c.PacienteInformacion).ToList();
                                        //// Asignar null a la propiedad PacienteInformacion de cada objeto de consultas
                                        //consultas.ForEach(c => c.PacienteInformacion = null);
                                        //// Serializar la lista de consultas modificada
                                        //var historiaJson = JsonConvert.SerializeObject(consultas);
                                        //// Asignar el PacienteInformacion correspondiente a cada objeto de consultas
                                        //consultas.Zip(pacientesInformacion, (c, p) => new { Consulta = c, PacienteInformacion = p })
                                        //.ToList()
                                        //.ForEach(cp => cp.Consulta.PacienteInformacion = cp.PacienteInformacion);

                                    }
                                    <button class="option btn btn-outline-info" onclick="ShowEditModal('@item.IdPartido')">Ver Datos</button>
                                    <form id="eliminarForm" onsubmit="alertElminarPrevent(event)" asp-action="Eliminar" asp-route-id="@item.IdPartido">
                                        <button class="option btn btn-outline-info" type="submit">Eliminar</button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </div>
</div>



@section Scripts{
    <script src="~/js/pages/pacientes.js" asp-append-version="true"></script>
    <script src="~/lib/limonte-sweetalert2/sweetalert2.min.js"></script>

    <script>

        function alertElminarPrevent(e) {
            e.preventDefault();

            Swal.fire({
                title: '¿Esta seguro de eliminar a este paciente?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Si',
                cancelButtonText: 'No'
            }).then((resultado) => {

                if (resultado.isConfirmed) {
                    const formulario = document.getElementById('eliminarForm');
                    formulario.submit();
                }

            })
        }

        function alertAgregarPrevent(e) {
            e.preventDefault();

            Swal.fire({
                title: '¿Esta seguro de agregar a un nuevo paciente?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Si',
                cancelButtonText: 'No'
            }).then((resultado) => {

                if (resultado.isConfirmed) {
                    const formulario = document.getElementById('crear');
                    formulario.submit();
                }

            })
        }

        function testAlert() {
            Swal.fire('Any fool can use a computer');
        }

        function alertaEliminar() {
            Swal.fire(
                'Good job!',
                'You clicked the button!',
                'success'
            )
        }


        let urls = {
            getPaciente: "@Url.Action("GetPaciente", "Pacientes")",
        }

    </script>
}